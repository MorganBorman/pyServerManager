#!/usr/bin/python

import socket, time, sys, os
from optparse import OptionParser
import xml.etree.ElementTree as ElementTree

#Path to keep unix domain socket for interproces control
UDS_FILEPATH = "uds"

parser = OptionParser(usage = "usage: %prog [action] <servername>")

parser.add_option("-s", "--uds",
		action="store", type="string", dest="uds",
		help="Specify the location of the unix domain socket to use to connect to the psm process.")

(options, args) = parser.parse_args()

if len(args) < 1:
	parser.error("You must specify an action.")

commandId = str(int(time.time()))

sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
try:
	sock.connect(UDS_FILEPATH)
except socket.error:
	print "There was an error connecting to the Unix Domain socket.\nMake sure the file \"" + UDS_FILEPATH + "\" is either an absolute path or available in the current path"
	sys.exit(1)

xmlTree = ElementTree.Element('xml')
commandTree = ElementTree.Element('command')
commandTree.set('id', commandId)
commandTree.text = " ".join(args)
xmlTree.append(commandTree)

print "Sending command(", commandId, "):", " ".join(args)

#print ElementTree.tostring(xmlTree, encoding="us-ascii")

sock.send(ElementTree.tostring(xmlTree, encoding="us-ascii"))
data = sock.recv(4096)

try:
    dataTree = ElementTree.XML(data)
except:
    print "Received invalid data:", data
else:
	for responseTree in dataTree.findall('response'):
		print "Received response(", responseTree.get('id'), "):", responseTree.text

sock.shutdown(1)
sock.close()
sock = None
sys.exit(0)
